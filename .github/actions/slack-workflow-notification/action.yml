name: Slack Workflow Notification
description: Send a message to Slack when a workflow completes

inputs:
  slack_token:
    description: Slack token
    required: true
  slack_channel:
    description: Slack channel
    required: true
  conclusion:
    description: The conclusion of the workflow
    required: true
  text:
    description: The text to display in the main message
    required: true
  text_link:
    description: Optional link for main text
    required: false
  dry_run:
    description: 'Print message info'
    required: false
    default: 'false'
  context:
    description: A list of contextual text blocks (text) to display after the main message
    required: false
    default: "null"
  links:
    description: A list of links (text:url) to display after the main message
    required: false
    default: "null"
  separator:
    description: Optional override the separator for context/link blocks
    required: false
    default: '|'

runs:
  using: composite
  steps:
    - name: Context
      id:  context
      shell: bash
      env:
        conclusion: ${{ inputs.conclusion }}
        text_content: ${{ inputs.text }}
        text_link: ${{ inputs.text_link }}
        context: ${{ inputs.context }}
        links: ${{ inputs.links }}
        separator: ${{ inputs.separator }}
      run: |
        emoji=":github-actions-autolink-reference:"

        if [[ "${conclusion}" == "success" ]]; then
          emoji=":github-actions-success:"
        elif [[ "${conclusion}" == "failure" ]]; then
          emoji=":github-actions-failure:"
        elif [[ "${conclusion}" == "cancelled" ]]; then
          emoji=":github-actions-cancelled:"
        elif [[ "${conclusion}" == "skipped" ]]; then
          emoji=":github-actions-skip:"
        fi

        if [ -n "${text_link}" ]; then
          text="${emoji} <${text_link}|${text_content}>"
        else
          text="${emoji} ${text_content}"
        fi

        links_arr="[]"
        context_arr="[]"

        if [ -n "${links}" ] && [ "${links}" != "null" ]; then
          # Convert JSON to array of slack compliant markdown links
          links_arr=$(echo "${links}" | jq 'to_entries | map("<\(.value)|\(.key)>")')
        fi

        if [ -n "${context}" ] && [ "${context}" != "null" ]; then
          # Convert JSON to array of slack compliant markdown text
          context_arr=$(echo "${context}" | jq 'to_entries | map("*\(.key)*: \(.value)")')
        fi

        # Combine the two arrays into a separated text list
        combined_blocks=$(echo "${context_arr}" "${links_arr}" | jq -rs 'add')
        # Join arrays with separator into a single value
        blocks=$(echo "${combined_blocks}" | jq -r --arg s "${separator}" 'join(" \($s) ")')

        if [ -n "${blocks}" ]; then
          text="${text} | ${blocks}"
        fi

        echo "text=${text}" >> "${GITHUB_OUTPUT}"
        cat "${GITHUB_OUTPUT}"

    - name: Notify Slack
      uses: mozilla/addons/.github/actions/slack@test-actions
      with:
        slack_token: ${{ inputs.slack_token }}
        method: chat.postMessage
        payload: |
          channel: "${{ inputs.slack_channel }}"
          text: "${{ steps.context.outputs.text }}"
        dry_run: ${{ inputs.dry_run }}
